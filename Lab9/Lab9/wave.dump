$date
    Oct 29, 2024  14:20:24
$end
$version
    TOOL:	xmsim	22.03-s012
$end
$timescale
    10 ps
$end

$scope module stimulus $end
$var parameter 32 !    AddrSize $end
$var parameter 32 "    WordSize $end
$var reg       1 #    clk $end
$var wire      1 $    Serial_out  $end
$var reg       1 %    Breq $end
$var wire      1 &    Bgnt  $end
$var wire      1 '    DataBus [7] $end
$var wire      1 (    DataBus [6] $end
$var wire      1 )    DataBus [5] $end
$var wire      1 *    DataBus [4] $end
$var wire      1 +    DataBus [3] $end
$var wire      1 ,    DataBus [2] $end
$var wire      1 -    DataBus [1] $end
$var wire      1 .    DataBus [0] $end
$var wire      1 /    AddrBus [31] $end
$var wire      1 0    AddrBus [30] $end
$var wire      1 1    AddrBus [29] $end
$var wire      1 2    AddrBus [28] $end
$var wire      1 3    AddrBus [27] $end
$var wire      1 4    AddrBus [26] $end
$var wire      1 5    AddrBus [25] $end
$var wire      1 6    AddrBus [24] $end
$var wire      1 7    AddrBus [23] $end
$var wire      1 8    AddrBus [22] $end
$var wire      1 9    AddrBus [21] $end
$var wire      1 :    AddrBus [20] $end
$var wire      1 ;    AddrBus [19] $end
$var wire      1 <    AddrBus [18] $end
$var wire      1 =    AddrBus [17] $end
$var wire      1 >    AddrBus [16] $end
$var wire      1 ?    AddrBus [15] $end
$var wire      1 @    AddrBus [14] $end
$var wire      1 A    AddrBus [13] $end
$var wire      1 B    AddrBus [12] $end
$var wire      1 C    AddrBus [11] $end
$var wire      1 D    AddrBus [10] $end
$var wire      1 E    AddrBus [9] $end
$var wire      1 F    AddrBus [8] $end
$var wire      1 G    AddrBus [7] $end
$var wire      1 H    AddrBus [6] $end
$var wire      1 I    AddrBus [5] $end
$var wire      1 J    AddrBus [4] $end
$var wire      1 K    AddrBus [3] $end
$var wire      1 L    AddrBus [2] $end
$var wire      1 M    AddrBus [1] $end
$var wire      1 N    AddrBus [0] $end
$var wire      1 O    ControlBus  $end
$var reg       1 P    bReset $end

$scope module MAINSYSTEM_01 $end
$var parameter 32 Q    AddressSize $end
$var parameter 32 R    WordSize $end
$var wire      1 $    Serial_out  $end
$var reg       1 S    Bgnt $end
$var wire      1 '    DataBus [7] $end
$var wire      1 (    DataBus [6] $end
$var wire      1 )    DataBus [5] $end
$var wire      1 *    DataBus [4] $end
$var wire      1 +    DataBus [3] $end
$var wire      1 ,    DataBus [2] $end
$var wire      1 -    DataBus [1] $end
$var wire      1 .    DataBus [0] $end
$var wire      1 /    AddressBus [31] $end
$var wire      1 0    AddressBus [30] $end
$var wire      1 1    AddressBus [29] $end
$var wire      1 2    AddressBus [28] $end
$var wire      1 3    AddressBus [27] $end
$var wire      1 4    AddressBus [26] $end
$var wire      1 5    AddressBus [25] $end
$var wire      1 6    AddressBus [24] $end
$var wire      1 7    AddressBus [23] $end
$var wire      1 8    AddressBus [22] $end
$var wire      1 9    AddressBus [21] $end
$var wire      1 :    AddressBus [20] $end
$var wire      1 ;    AddressBus [19] $end
$var wire      1 <    AddressBus [18] $end
$var wire      1 =    AddressBus [17] $end
$var wire      1 >    AddressBus [16] $end
$var wire      1 ?    AddressBus [15] $end
$var wire      1 @    AddressBus [14] $end
$var wire      1 A    AddressBus [13] $end
$var wire      1 B    AddressBus [12] $end
$var wire      1 C    AddressBus [11] $end
$var wire      1 D    AddressBus [10] $end
$var wire      1 E    AddressBus [9] $end
$var wire      1 F    AddressBus [8] $end
$var wire      1 G    AddressBus [7] $end
$var wire      1 H    AddressBus [6] $end
$var wire      1 I    AddressBus [5] $end
$var wire      1 J    AddressBus [4] $end
$var wire      1 K    AddressBus [3] $end
$var wire      1 L    AddressBus [2] $end
$var wire      1 M    AddressBus [1] $end
$var wire      1 N    AddressBus [0] $end
$var wire      1 O    ControlBus  $end

$scope module SRAM_01 $end
$var parameter 32 T    AddressSize $end
$var parameter 32 U    WordSize $end
$upscope $end


$scope module WRAP_SRAM_01 $end
$var parameter 32 V    AddressSize $end
$var parameter 32 W    WordSize $end
$var wire      1 '    DataBus [7] $end
$var wire      1 (    DataBus [6] $end
$var wire      1 )    DataBus [5] $end
$var wire      1 *    DataBus [4] $end
$var wire      1 +    DataBus [3] $end
$var wire      1 ,    DataBus [2] $end
$var wire      1 -    DataBus [1] $end
$var wire      1 .    DataBus [0] $end
$var wire      1 /    AddressBus [31] $end
$var wire      1 0    AddressBus [30] $end
$var wire      1 1    AddressBus [29] $end
$var wire      1 2    AddressBus [28] $end
$var wire      1 3    AddressBus [27] $end
$var wire      1 4    AddressBus [26] $end
$var wire      1 5    AddressBus [25] $end
$var wire      1 6    AddressBus [24] $end
$var wire      1 7    AddressBus [23] $end
$var wire      1 8    AddressBus [22] $end
$var wire      1 9    AddressBus [21] $end
$var wire      1 :    AddressBus [20] $end
$var wire      1 ;    AddressBus [19] $end
$var wire      1 <    AddressBus [18] $end
$var wire      1 =    AddressBus [17] $end
$var wire      1 >    AddressBus [16] $end
$var wire      1 ?    AddressBus [15] $end
$var wire      1 @    AddressBus [14] $end
$var wire      1 A    AddressBus [13] $end
$var wire      1 B    AddressBus [12] $end
$var wire      1 C    AddressBus [11] $end
$var wire      1 D    AddressBus [10] $end
$var wire      1 E    AddressBus [9] $end
$var wire      1 F    AddressBus [8] $end
$var wire      1 G    AddressBus [7] $end
$var wire      1 H    AddressBus [6] $end
$var wire      1 I    AddressBus [5] $end
$var wire      1 J    AddressBus [4] $end
$var wire      1 K    AddressBus [3] $end
$var wire      1 L    AddressBus [2] $end
$var wire      1 M    AddressBus [1] $end
$var wire      1 N    AddressBus [0] $end
$var wire      1 O    ControlBus  $end
$upscope $end


$scope module UART_XMTR_01 $end
$var parameter 32 X    word_size $end
$var wire      1 $    Serial_out  $end

$scope module Control_Unit1 $end
$var parameter 32 Y    one_hot_count $end
$var parameter 32 Z    state_count $end
$var parameter 32 [    size_bit_count $end
$var parameter  3 \    idle $end
$var parameter  3 ]    waiting $end
$var parameter  3 ^    sending $end
$var parameter  9 _    all_ones $end
$upscope $end


$scope module Datapath_Unit1 $end
$var parameter 32 `    word_size $end
$var parameter 32 a    size_bit_count $end
$var parameter  9 b    all_ones $end
$var wire      1 $    Serial_out  $end
$upscope $end

$upscope $end


$scope module WRAP_UART_01 $end
$var parameter 32 c    WordSize $end
$var wire      1 '    DataBus [7] $end
$var wire      1 (    DataBus [6] $end
$var wire      1 )    DataBus [5] $end
$var wire      1 *    DataBus [4] $end
$var wire      1 +    DataBus [3] $end
$var wire      1 ,    DataBus [2] $end
$var wire      1 -    DataBus [1] $end
$var wire      1 .    DataBus [0] $end
$var wire      1 /    AddressBus [31] $end
$var wire      1 0    AddressBus [30] $end
$var wire      1 1    AddressBus [29] $end
$var wire      1 2    AddressBus [28] $end
$var wire      1 3    AddressBus [27] $end
$var wire      1 4    AddressBus [26] $end
$var wire      1 5    AddressBus [25] $end
$var wire      1 6    AddressBus [24] $end
$var wire      1 7    AddressBus [23] $end
$var wire      1 8    AddressBus [22] $end
$var wire      1 9    AddressBus [21] $end
$var wire      1 :    AddressBus [20] $end
$var wire      1 ;    AddressBus [19] $end
$var wire      1 <    AddressBus [18] $end
$var wire      1 =    AddressBus [17] $end
$var wire      1 >    AddressBus [16] $end
$var wire      1 ?    AddressBus [15] $end
$var wire      1 @    AddressBus [14] $end
$var wire      1 A    AddressBus [13] $end
$var wire      1 B    AddressBus [12] $end
$var wire      1 C    AddressBus [11] $end
$var wire      1 D    AddressBus [10] $end
$var wire      1 E    AddressBus [9] $end
$var wire      1 F    AddressBus [8] $end
$var wire      1 G    AddressBus [7] $end
$var wire      1 H    AddressBus [6] $end
$var wire      1 I    AddressBus [5] $end
$var wire      1 J    AddressBus [4] $end
$var wire      1 K    AddressBus [3] $end
$var wire      1 L    AddressBus [2] $end
$var wire      1 M    AddressBus [1] $end
$var wire      1 N    AddressBus [0] $end
$var wire      1 O    ControlBus  $end
$upscope $end


$scope module Arbiter_01 $end
$var parameter 32 d    NumUnit $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
b11 d
b1000 c
b111111111 b
b11 a
b1000 `
b111111111 _
b100 ^
b10 ]
b1 \
b11 [
b11 Z
b11 Y
b1000 X
b1000 W
b10010 V
b1000 U
b10010 T
b1000 R
b10010 Q
b1000 "
b10010 !
0#
x$
0%
0&
z'
z(
z)
z*
z+
z,
z-
z.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
xO
1P
0S
$end
#1000
1#
zO
#2000
0#
#3000
1#
#4000
0#
#5000
1#
#6000
0#
#7000
1#
#8000
0#
#9000
1#
#10000
0P
0#
1$
#11000
1#
#12000
0#
#13000
1#
#14000
0#
#15000
1#
#16000
0#
#17000
1#
#18000
0#
#19000
1#
#20000
1P
0-
0,
0+
0*
0)
0(
0'
0#
#21000
1#
#22000
0#
#23000
1#
#24000
0#
#25000
1#
#26000
0#
#27000
1#
#28000
0#
#29000
1#
#30000
0#
#31000
1#
#32000
0#
#33000
1#
#34000
0#
#35000
1#
#36000
0#
#37000
1#
#38000
0#
#39000
1#
#40000
0#
#41000
1#
#42000
0#
#43000
1#
#44000
0#
#45000
1#
#46000
0#
#47000
1#
#48000
0#
#49000
1#
#50000
1.
1,
1*
1)
1J
1I
12
0#
#51000
1#
#52000
0#
#53000
1#
0O
#54000
0#
#55000
1#
#56000
0#
#57000
1#
#58000
0#
#59000
1#
#60000
0#
#61000
1#
#62000
0#
#63000
1#
#64000
0#
#65000
1#
#66000
0#
#67000
1#
#68000
0#
#69000
1#
#70000
z.
0,
0*
0)
0J
0I
02
0#
#71000
1#
zO
#72000
0#
#73000
1#
#74000
0#
#75000
1#
#76000
0#
#77000
1#
#78000
0#
#79000
1#
#80000
0#
#81000
1#
#82000
0#
#83000
1#
#84000
0#
#85000
1#
#86000
0#
#87000
1#
#88000
0#
#89000
1#
#90000
0#
#91000
1#
#92000
0#
#93000
1#
#94000
0#
#95000
1#
#96000
0#
#97000
1#
#98000
0#
#99000
1#
#100000
1J
1I
1<
12
0#
#101000
1#
#102000
0#
#103000
1#
1)
1*
1,
1.
0O
#104000
0#
#105000
1#
#106000
0#
#107000
1#
#108000
0#
#109000
1#
#110000
0#
#111000
1#
#112000
0#
#113000
1#
#114000
0#
#115000
1#
#116000
0#
#117000
1#
#118000
0#
#119000
1#
#120000
0#
#121000
1#
#122000
0#
#123000
1#
#124000
0#
#125000
1#
#126000
0#
#127000
1#
#128000
0#
#129000
1#
#130000
0J
0I
0<
02
0#
0)
0*
0,
z.
#131000
1#
zO
#132000
0#
#133000
1#
#134000
0#
#135000
1#
#136000
0#
#137000
1#
#138000
0#
#139000
1#
#140000
0P
0#
#141000
1#
#142000
0#
#143000
1#
#144000
0#
#145000
1#
#146000
0#
#147000
1#
#148000
0#
#149000
1#
#150000
1P
0#
#151000
1#
#152000
0#
#153000
1#
#154000
0#
#155000
1#
#156000
1.
1,
1*
1)
1N
11
0#
#157000
1#
#158000
0#
#159000
1#
0O
#160000
0#
#161000
1#
#162000
0N
1M
0#
#163000
1#
#164000
0#
#165000
1#
#166000
0#
#167000
1#
#168000
0M
1L
0#
#169000
1#
#170000
0#
#171000
1#
0$
#172000
0#
#173000
1#
1$
#174000
0#
#175000
1#
0$
#176000
0#
#177000
1#
1$
#178000
0#
#179000
1#
0$
#180000
0#
#181000
1#
1$
#182000
0#
#183000
1#
#184000
0#
#185000
1#
0$
#186000
0#
#187000
1#
#188000
z.
0,
0*
0)
0L
01
0#
#189000
1#
1$
zO
#190000
0#
#191000
1#
#192000
0#
#193000
1#
#194000
0#
#195000
1#
#196000
0#
#197000
1#
#198000
